package sk.upjs.paz1c.homer;

import java.awt.Color;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;
import javax.swing.DefaultComboBoxModel;
import sk.upjs.paz1c.homer.dao.ItemDao;
import sk.upjs.paz1c.homer.dao.ProductDao;
import sk.upjs.paz1c.homer.entity.Item;
import sk.upjs.paz1c.homer.entity.Product;
import sk.upjs.paz1c.homer.entity.ShoppingList;

/**
 *
 * @author ntb
 */
public class ItemDialog extends javax.swing.JDialog {

    private Item item = new Item();
    private ShoppingList shoppingList = new ShoppingList();
    private final ItemDao itemDao = ObjectFactory.INSTANCE.getDao(Item.class);
    private List<Item> foundItems = new ArrayList<>();
    private final ProductDao productDao = ObjectFactory.INSTANCE.getDao(Product.class);

    /**
     * Creates new form ProductDialog
     */
    public ItemDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        setLocationByPlatform(true);
        initComponents();
    }

    public ItemDialog(Item item, ShoppingList shoppingList, Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        this.setTitle("Úprava položky");
        this.item = item;
        this.item.setListId(shoppingList.getId());
        itemNameTextField.setText(item.getName());
        this.item.setListId(shoppingList.getId());
        this.shoppingList = shoppingList;
        initializeUnits();
    }

    public ItemDialog(ShoppingList shoppingList, Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        this.setTitle("Pridanie položky");
        this.item = new Item();
        this.item.setListId(shoppingList.getId());
        itemNameTextField.setText(item.getName());
        this.shoppingList = shoppingList;
        this.unitComboBox.setModel(
                new DefaultComboBoxModel<>(new String[]{
                    "kg", "g", "l", "ml", "kusov", "iné"
                })
        );
    }
    
    private void initializeUnits () {
        Product product = productDao.find(this.item.getProductId());
        foundItems = itemDao.findAllByProductName(product.getName());
        Set<String> set = foundItems.stream().map(i -> i.getUnit()).collect(Collectors.toSet());
        String [] labels = set.toArray(new String[set.size() - 1]);
        
        unitComboBox.setModel(new DefaultComboBoxModel<>(labels));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        itemNameTextField = new javax.swing.JTextField();
        itemNameLabel = new javax.swing.JLabel();
        itemAmountLabel = new javax.swing.JLabel();
        amountSpinner = new javax.swing.JSpinner();
        okButton = new javax.swing.JButton();
        unitComboBox = new javax.swing.JComboBox<>();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        itemNameLabel.setText("Názov položky:");

        itemAmountLabel.setText("Množstvo:");

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        unitComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        unitComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(itemNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(itemNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(itemAmountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(amountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(unitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemAmountLabel)
                    .addComponent(amountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // TODO add your handling code here:
        itemNameTextField.setBackground(Color.white);
        String itemName = itemNameTextField.getText();

        if (item.getName() != null) {
            //update item
            item.setName(itemName);
            String amount = (amountSpinner.getValue().toString());
            item.setAmount(Float.parseFloat(amount));
            itemDao.store(item);
            this.dispose();
        } else {
            //add item
            List<Product> products = new ArrayList<>();
            products = productDao.find(itemName);
            if (products.isEmpty()) {
                //searched product doesnt exist
                itemNameTextField.setBackground(new Color(192, 57, 43));

            }
            if (!(products.isEmpty())) {
                //add product to list as item
                Collections.sort(products, (Product p, Product s) -> p.getName().length() - s.getName().length());
                item.setProduct_id(products.get(0).getId());
                item.setName(itemName);
                String amount = (amountSpinner.getValue().toString());
                item.setAmount((Float.parseFloat(amount)));
                item.setUnit((String) unitComboBox.getSelectedItem());
                itemDao.store(item);
                this.dispose();
            }
        }

    }//GEN-LAST:event_okButtonActionPerformed

    private void unitComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unitComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner amountSpinner;
    private javax.swing.JLabel itemAmountLabel;
    private javax.swing.JLabel itemNameLabel;
    private javax.swing.JTextField itemNameTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox<String> unitComboBox;
    // End of variables declaration//GEN-END:variables
}
